{"version":3,"file":"Teleman.js","sources":["../src/index.mjs"],"sourcesContent":["import compose from 'koa-compose'\n\nfunction createURLSearchParams(query) {\n  if (query.constructor === String) {\n    return new URLSearchParams(query)\n  }\n\n  if (query.constructor === Object) {\n    query = Object.entries(query)\n  }\n\n  const q = new URLSearchParams()\n\n  for (const [name, value] of query) {\n    if (value != null) q.append(name, value)\n  }\n\n  return q\n}\n\nfunction createFormData(data) {\n  if (data.constructor === Object) {\n    data = Object.entries(data)\n  }\n\n  const f = new FormData()\n\n  for (const [name, value, filename] of data) {\n    if (value != null) f.append(name, value, filename)\n  }\n\n  return f\n}\n\nclass Teleman {\n  constructor({ urlPrefix, headers, readBody = true } = {}) {\n    this.urlPrefix = urlPrefix\n    this.headers = headers\n    this.readBody = readBody\n    this.middleware = []\n  }\n\n  use(middleware) {\n    this.middleware.push(middleware)\n  }\n\n  fetch(url, {\n    method = 'GET',\n    urlPrefix = this.urlPrefix,\n    headers,\n    query,\n    params = {},\n    body,\n    readBody = this.readBody,\n    use = this.middleware,\n    useBefore = [],\n    useAfter = [],\n    ...rest } = {}\n  ) {\n    return new Promise(resolve => {\n      method = method.toUpperCase()\n\n      url = url.replace(/:([a-z]\\w*)/ig, (_, w) => encodeURIComponent(params[w]))\n\n      const absURL = /^https?:\\/\\//\n      if (!absURL.test(url)) {\n        if (urlPrefix) url = urlPrefix + url\n\n        // urlPrefix also isn't absolute\n        if (!absURL.test(url)) {\n          try {\n            const a = document.createElement('a')\n            a.href = url\n            url = a.href\n          } catch (e) {\n            // node.js env\n          }\n        }\n      }\n\n      url = new URL(url)\n\n      if (query) {\n        if (!(query instanceof URLSearchParams)) {\n          query = createURLSearchParams(query)\n        }\n\n        for (const [name, value] of query.entries()) {\n          url.searchParams.append(name, value)\n        }\n      }\n\n      url = url.href\n\n      if (this.headers && headers) {\n        const h = new Headers(this.headers)\n        for (const [name, value] of new Headers(headers).entries()) {\n          h.set(name, value)\n        }\n        headers = h\n      } else {\n        headers = new Headers(this.headers || headers || {})\n      }\n\n      if (body !== undefined && !['GET', 'HEAD'].includes(method)) {\n        const contentType = headers.get('Content-Type') || ''\n\n        if ((!contentType && body && body.constructor === Object) || contentType.startsWith('application/json')) {\n          if (!headers.has('Content-Type')) {\n            headers.set('Content-Type', 'application/json')\n          }\n\n          body = JSON.stringify(body)\n        } else if (contentType.startsWith('multipart/form-data') && body && !(body instanceof FormData)) {\n          body = createFormData(body)\n        } else if (contentType.startsWith('application/x-www-form-urlencoded') && body && !(body instanceof URLSearchParams)) {\n          body = createURLSearchParams(body)\n        }\n      }\n\n      const ctx = {\n        url,\n        options: { method, headers, body },\n        readBody,\n        ...rest\n      }\n\n      resolve(compose([...useBefore, ...use, ...useAfter])(ctx, () =>\n        fetch(ctx.url, ctx.options).then(response => {\n          ctx.response = response\n\n          let body = Promise.resolve()\n\n          if (readBody && ['GET', 'POST', 'PUT', 'DELETE', 'PATCH'].includes(ctx.options.method.toUpperCase())) {\n            const responseType = response.headers.get('Content-Type')\n\n            if (responseType) {\n              if (responseType.startsWith('application/json')) {\n                body = response.json()\n              } else if (responseType.startsWith('text/')) {\n                body = response.text()\n              } else if (responseType.startsWith('multipart/form-data')) {\n                body = response.formData()\n              }\n            }\n          }\n\n          if (response.ok) {\n            return body\n          } else {\n            return body.then(e => { throw e })\n          }\n        })\n      ))\n    })\n  }\n\n  get(url, query, options) {\n    return this.fetch(url, {\n      method: 'GET',\n      query,\n      ...options\n    })\n  }\n\n  post(url, body, options) {\n    return this.fetch(url, {\n      method: 'POST',\n      body,\n      ...options\n    })\n  }\n\n  put(url, body, options) {\n    return this.fetch(url, {\n      method: 'PUT',\n      body,\n      ...options\n    })\n  }\n\n  patch(url, body, options) {\n    return this.fetch(url, {\n      method: 'PATCH',\n      body,\n      ...options\n    })\n  }\n\n  delete(url, query, options) {\n    return this.fetch(url, {\n      method: 'DELETE',\n      query,\n      ...options\n    })\n  }\n\n  head(url, query, options) {\n    return this.fetch(url, {\n      method: 'HEAD',\n      query,\n      ...options\n    })\n  }\n}\n\nconst instance = Teleman.default = new Teleman()\nTeleman.use = instance.use.bind(instance)\nTeleman.fetch = instance.fetch.bind(instance)\nTeleman.get = instance.get.bind(instance)\nTeleman.post = instance.post.bind(instance)\nTeleman.put = instance.put.bind(instance)\nTeleman.patch = instance.patch.bind(instance)\nTeleman.delete = instance.delete.bind(instance)\nTeleman.head = instance.head.bind(instance)\n\nexport default Teleman\n"],"names":["createURLSearchParams","query","constructor","String","URLSearchParams","Object","entries","q","name","value","append","createFormData","data","f","FormData","filename","Teleman","urlPrefix","headers","readBody","middleware","use","push","fetch","url","method","params","body","useBefore","useAfter","rest","Promise","resolve","toUpperCase","replace","_","w","encodeURIComponent","absURL","test","a","document","createElement","href","e","URL","searchParams","h","Headers","set","undefined","includes","contentType","get","startsWith","has","JSON","stringify","ctx","options","compose","then","response","responseType","json","text","formData","ok","post","put","patch","delete","head","instance","default","bind"],"mappings":"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"}