{"version":3,"file":"Teleman.js","sources":["../src/index.mjs"],"sourcesContent":["import compose from 'koa-compose'\n\nfunction createURLSearchParams(query) {\n  if (query.constructor === String) {\n    return new URLSearchParams(query)\n  }\n\n  if (query.constructor === Object) {\n    query = Object.entries(query)\n  }\n\n  const q = new URLSearchParams()\n\n  for (const [name, value] of query) {\n    if (value != null) {\n      q.append(name, value)\n    }\n  }\n\n  return q\n}\n\nfunction createFormData(data) {\n  if (data.constructor === Object) {\n    data = Object.entries(data)\n  }\n\n  const f = new FormData()\n\n  for (const [name, value, filename] of data) {\n    if (value != null) {\n      f.append(name, value, filename)\n    }\n  }\n\n  return f\n}\n\nclass Teleman {\n  constructor({ base, headers, readBody = true, throwFailedResponse = true } = {}) {\n    if (base) {\n      this.base = base\n    } else {\n      try {\n        // defaults to document.baseURI in browser\n        this.base = document.baseURI\n      } catch (e) {\n        // in node.js, ignore\n      }\n    }\n\n    this.headers = headers\n    this.readBody = readBody\n    this.throwFailedResponse = throwFailedResponse\n    this.middleware = []\n  }\n\n  use(middleware, beginning = false) {\n    if (beginning) {\n      this.middleware.unshift(middleware)\n    } else {\n      this.middleware.push(middleware)\n    }\n  }\n\n  fetch(url, {\n    method = 'GET',\n    base = this.base,\n    headers,\n    query,\n    params = {},\n    body,\n    readBody = this.readBody,\n    throwFailedResponse = this.throwFailedResponse,\n    use = this.middleware,\n    useBefore = [],\n    useAfter = [],\n    ...rest } = {}\n  ) {\n    return new Promise(resolve => {\n      method = method.toUpperCase()\n      url = new URL(url.replace(/:([a-z]\\w*)/ig, (_, w) => encodeURIComponent(params[w])), base)\n\n      if (query) {\n        if (!(query instanceof URLSearchParams)) {\n          query = createURLSearchParams(query)\n        }\n\n        query.forEach((value, name) => url.searchParams.append(name, value))\n      }\n\n      if (this.headers && headers) {\n        const h = new Headers(this.headers)\n        new Headers(headers).forEach((value, name) => h.set(name, value))\n        headers = h\n      } else {\n        headers = new Headers(this.headers || headers || {})\n      }\n\n      if (body !== undefined && !['GET', 'HEAD'].includes(method)) {\n        const contentType = headers.get('Content-Type') || ''\n\n        if ((!contentType && body && body.constructor === Object) || contentType.startsWith('application/json')) {\n          if (!headers.has('Content-Type')) {\n            headers.set('Content-Type', 'application/json')\n          }\n\n          body = JSON.stringify(body)\n        } else if (contentType.startsWith('multipart/form-data') && body && !(body instanceof FormData)) {\n          body = createFormData(body)\n        } else if (contentType.startsWith('application/x-www-form-urlencoded') && body && !(body instanceof URLSearchParams)) {\n          body = createURLSearchParams(body)\n        }\n      }\n\n      const ctx = {\n        url,\n        options: { method, headers, body },\n        readBody,\n        ...rest\n      }\n\n      resolve(compose([...useBefore, ...use, ...useAfter])(ctx, () =>\n        fetch(ctx.url.href, ctx.options).then(response => {\n          ctx.response = response\n\n          let body = Promise.resolve()\n\n          if (readBody && ['GET', 'POST', 'PUT', 'DELETE', 'PATCH'].includes(ctx.options.method.toUpperCase())) {\n            const responseType = response.headers.get('Content-Type')\n\n            if (responseType) {\n              if (responseType.startsWith('application/json')) {\n                body = response.json()\n              } else if (responseType.startsWith('text/')) {\n                body = response.text()\n              } else if (responseType.startsWith('multipart/form-data')) {\n                body = response.formData()\n              }\n            }\n          }\n\n          if (response.ok || !throwFailedResponse) {\n            return body\n          } else {\n            return body.then(e => { throw e })\n          }\n        })\n      ))\n    })\n  }\n\n  get(url, query, options) {\n    return this.fetch(url, {\n      method: 'GET',\n      query,\n      ...options\n    })\n  }\n\n  post(url, body, options) {\n    return this.fetch(url, {\n      method: 'POST',\n      body,\n      ...options\n    })\n  }\n\n  put(url, body, options) {\n    return this.fetch(url, {\n      method: 'PUT',\n      body,\n      ...options\n    })\n  }\n\n  patch(url, body, options) {\n    return this.fetch(url, {\n      method: 'PATCH',\n      body,\n      ...options\n    })\n  }\n\n  delete(url, query, options) {\n    return this.fetch(url, {\n      method: 'DELETE',\n      query,\n      ...options\n    })\n  }\n\n  head(url, query, options) {\n    return this.fetch(url, {\n      method: 'HEAD',\n      query,\n      ...options\n    })\n  }\n}\n\nconst singleton = Teleman.singleton = new Teleman()\nTeleman.use = singleton.use.bind(singleton)\nTeleman.fetch = singleton.fetch.bind(singleton)\nTeleman.get = singleton.get.bind(singleton)\nTeleman.post = singleton.post.bind(singleton)\nTeleman.put = singleton.put.bind(singleton)\nTeleman.patch = singleton.patch.bind(singleton)\nTeleman.delete = singleton.delete.bind(singleton)\nTeleman.head = singleton.head.bind(singleton)\n\nexport default Teleman\n"],"names":[],"mappings":";;;;;;AAEA,SAAS,qBAAqB,CAAC,KAAK,EAAE;AACtC,EAAE,IAAI,KAAK,CAAC,WAAW,KAAK,MAAM,EAAE;AACpC,IAAI,OAAO,IAAI,eAAe,CAAC,KAAK,CAAC;AACrC,GAAG;AACH;AACA,EAAE,IAAI,KAAK,CAAC,WAAW,KAAK,MAAM,EAAE;AACpC,IAAI,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,EAAC;AACjC,GAAG;AACH;AACA,EAAE,MAAM,CAAC,GAAG,IAAI,eAAe,GAAE;AACjC;AACA,EAAE,KAAK,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,KAAK,EAAE;AACrC,IAAI,IAAI,KAAK,IAAI,IAAI,EAAE;AACvB,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,EAAC;AAC3B,KAAK;AACL,GAAG;AACH;AACA,EAAE,OAAO,CAAC;AACV,CAAC;AACD;AACA,SAAS,cAAc,CAAC,IAAI,EAAE;AAC9B,EAAE,IAAI,IAAI,CAAC,WAAW,KAAK,MAAM,EAAE;AACnC,IAAI,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,EAAC;AAC/B,GAAG;AACH;AACA,EAAE,MAAM,CAAC,GAAG,IAAI,QAAQ,GAAE;AAC1B;AACA,EAAE,KAAK,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,IAAI,IAAI,EAAE;AAC9C,IAAI,IAAI,KAAK,IAAI,IAAI,EAAE;AACvB,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAC;AACrC,KAAK;AACL,GAAG;AACH;AACA,EAAE,OAAO,CAAC;AACV,CAAC;AACD;AACA,MAAM,OAAO,CAAC;AACd,EAAE,WAAW,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,GAAG,IAAI,EAAE,mBAAmB,GAAG,IAAI,EAAE,GAAG,EAAE,EAAE;AACnF,IAAI,IAAI,IAAI,EAAE;AACd,MAAM,IAAI,CAAC,IAAI,GAAG,KAAI;AACtB,KAAK,MAAM;AACX,MAAM,IAAI;AACV;AACA,QAAQ,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,QAAO;AACpC,OAAO,CAAC,OAAO,CAAC,EAAE;AAClB;AACA,OAAO;AACP,KAAK;AACL;AACA,IAAI,IAAI,CAAC,OAAO,GAAG,QAAO;AAC1B,IAAI,IAAI,CAAC,QAAQ,GAAG,SAAQ;AAC5B,IAAI,IAAI,CAAC,mBAAmB,GAAG,oBAAmB;AAClD,IAAI,IAAI,CAAC,UAAU,GAAG,GAAE;AACxB,GAAG;AACH;AACA,EAAE,GAAG,CAAC,UAAU,EAAE,SAAS,GAAG,KAAK,EAAE;AACrC,IAAI,IAAI,SAAS,EAAE;AACnB,MAAM,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAU,EAAC;AACzC,KAAK,MAAM;AACX,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAC;AACtC,KAAK;AACL,GAAG;AACH;AACA,EAAE,KAAK,CAAC,GAAG,EAAE;AACb,IAAI,MAAM,GAAG,KAAK;AAClB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI;AACpB,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM,GAAG,EAAE;AACf,IAAI,IAAI;AACR,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ;AAC5B,IAAI,mBAAmB,GAAG,IAAI,CAAC,mBAAmB;AAClD,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU;AACzB,IAAI,SAAS,GAAG,EAAE;AAClB,IAAI,QAAQ,GAAG,EAAE;AACjB,IAAI,GAAG,IAAI,EAAE,GAAG,EAAE;AAClB,IAAI;AACJ,IAAI,OAAO,IAAI,OAAO,CAAC,OAAO,IAAI;AAClC,MAAM,MAAM,GAAG,MAAM,CAAC,WAAW,GAAE;AACnC,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAC;AAChG;AACA,MAAM,IAAI,KAAK,EAAE;AACjB,QAAQ,IAAI,EAAE,KAAK,YAAY,eAAe,CAAC,EAAE;AACjD,UAAU,KAAK,GAAG,qBAAqB,CAAC,KAAK,EAAC;AAC9C,SAAS;AACT;AACA,QAAQ,KAAK,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,IAAI,KAAK,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,EAAC;AAC5E,OAAO;AACP;AACA,MAAM,IAAI,IAAI,CAAC,OAAO,IAAI,OAAO,EAAE;AACnC,QAAQ,MAAM,CAAC,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,OAAO,EAAC;AAC3C,QAAQ,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,EAAC;AACzE,QAAQ,OAAO,GAAG,EAAC;AACnB,OAAO,MAAM;AACb,QAAQ,OAAO,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,IAAI,EAAE,EAAC;AAC5D,OAAO;AACP;AACA,MAAM,IAAI,IAAI,KAAK,SAAS,IAAI,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AACnE,QAAQ,MAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,GAAE;AAC7D;AACA,QAAQ,IAAI,CAAC,CAAC,WAAW,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,KAAK,MAAM,KAAK,WAAW,CAAC,UAAU,CAAC,kBAAkB,CAAC,EAAE;AACjH,UAAU,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE;AAC5C,YAAY,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,EAAC;AAC3D,WAAW;AACX;AACA,UAAU,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAC;AACrC,SAAS,MAAM,IAAI,WAAW,CAAC,UAAU,CAAC,qBAAqB,CAAC,IAAI,IAAI,IAAI,EAAE,IAAI,YAAY,QAAQ,CAAC,EAAE;AACzG,UAAU,IAAI,GAAG,cAAc,CAAC,IAAI,EAAC;AACrC,SAAS,MAAM,IAAI,WAAW,CAAC,UAAU,CAAC,mCAAmC,CAAC,IAAI,IAAI,IAAI,EAAE,IAAI,YAAY,eAAe,CAAC,EAAE;AAC9H,UAAU,IAAI,GAAG,qBAAqB,CAAC,IAAI,EAAC;AAC5C,SAAS;AACT,OAAO;AACP;AACA,MAAM,MAAM,GAAG,GAAG;AAClB,QAAQ,GAAG;AACX,QAAQ,OAAO,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE;AAC1C,QAAQ,QAAQ;AAChB,QAAQ,GAAG,IAAI;AACf,QAAO;AACP;AACA,MAAM,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,SAAS,EAAE,GAAG,GAAG,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE;AAChE,QAAQ,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI;AAC1D,UAAU,GAAG,CAAC,QAAQ,GAAG,SAAQ;AACjC;AACA,UAAU,IAAI,IAAI,GAAG,OAAO,CAAC,OAAO,GAAE;AACtC;AACA,UAAU,IAAI,QAAQ,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,EAAE;AAChH,YAAY,MAAM,YAAY,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAC;AACrE;AACA,YAAY,IAAI,YAAY,EAAE;AAC9B,cAAc,IAAI,YAAY,CAAC,UAAU,CAAC,kBAAkB,CAAC,EAAE;AAC/D,gBAAgB,IAAI,GAAG,QAAQ,CAAC,IAAI,GAAE;AACtC,eAAe,MAAM,IAAI,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;AAC3D,gBAAgB,IAAI,GAAG,QAAQ,CAAC,IAAI,GAAE;AACtC,eAAe,MAAM,IAAI,YAAY,CAAC,UAAU,CAAC,qBAAqB,CAAC,EAAE;AACzE,gBAAgB,IAAI,GAAG,QAAQ,CAAC,QAAQ,GAAE;AAC1C,eAAe;AACf,aAAa;AACb,WAAW;AACX;AACA,UAAU,IAAI,QAAQ,CAAC,EAAE,IAAI,CAAC,mBAAmB,EAAE;AACnD,YAAY,OAAO,IAAI;AACvB,WAAW,MAAM;AACjB,YAAY,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,CAAC;AAC9C,WAAW;AACX,SAAS,CAAC;AACV,OAAO,EAAC;AACR,KAAK,CAAC;AACN,GAAG;AACH;AACA,EAAE,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE;AAC3B,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;AAC3B,MAAM,MAAM,EAAE,KAAK;AACnB,MAAM,KAAK;AACX,MAAM,GAAG,OAAO;AAChB,KAAK,CAAC;AACN,GAAG;AACH;AACA,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE;AAC3B,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;AAC3B,MAAM,MAAM,EAAE,MAAM;AACpB,MAAM,IAAI;AACV,MAAM,GAAG,OAAO;AAChB,KAAK,CAAC;AACN,GAAG;AACH;AACA,EAAE,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE;AAC1B,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;AAC3B,MAAM,MAAM,EAAE,KAAK;AACnB,MAAM,IAAI;AACV,MAAM,GAAG,OAAO;AAChB,KAAK,CAAC;AACN,GAAG;AACH;AACA,EAAE,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE;AAC5B,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;AAC3B,MAAM,MAAM,EAAE,OAAO;AACrB,MAAM,IAAI;AACV,MAAM,GAAG,OAAO;AAChB,KAAK,CAAC;AACN,GAAG;AACH;AACA,EAAE,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE;AAC9B,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;AAC3B,MAAM,MAAM,EAAE,QAAQ;AACtB,MAAM,KAAK;AACX,MAAM,GAAG,OAAO;AAChB,KAAK,CAAC;AACN,GAAG;AACH;AACA,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE;AAC5B,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;AAC3B,MAAM,MAAM,EAAE,MAAM;AACpB,MAAM,KAAK;AACX,MAAM,GAAG,OAAO;AAChB,KAAK,CAAC;AACN,GAAG;AACH,CAAC;AACD;AACA,MAAM,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,IAAI,OAAO,GAAE;AACnD,OAAO,CAAC,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAC;AAC3C,OAAO,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAC;AAC/C,OAAO,CAAC,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAC;AAC3C,OAAO,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAC;AAC7C,OAAO,CAAC,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAC;AAC3C,OAAO,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAC;AAC/C,OAAO,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAC;AACjD,OAAO,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS;;;;"}