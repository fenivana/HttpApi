{"version":3,"file":"Teleman.mjs","sources":["../src/index.mjs"],"sourcesContent":["import compose from 'koa-compose'\n\nfunction createURLSearchParams(query) {\n  if (query.constructor === String) {\n    return new URLSearchParams(query)\n  }\n\n  if (query.constructor === Object) {\n    query = Object.entries(query)\n  }\n\n  const q = new URLSearchParams()\n\n  for (const [name, value] of query) {\n    if (value != null) q.append(name, value)\n  }\n\n  return q\n}\n\nfunction createFormData(data) {\n  if (data.constructor === Object) {\n    data = Object.entries(data)\n  }\n\n  const f = new FormData()\n\n  for (const [name, value, filename] of data) {\n    if (value != null) f.append(name, value, filename)\n  }\n\n  return f\n}\n\nclass Teleman {\n  constructor({ base, headers, readBody = true } = {}) {\n    if (base) {\n      this.base = base\n    } else {\n      try {\n        // defaults to document.baseURI in browser\n        this.base = document.baseURI\n      } catch (e) {\n        // in node.js, ignore\n      }\n    }\n\n    this.headers = headers\n    this.readBody = readBody\n    this.middleware = []\n  }\n\n  use(middleware, beginning = false) {\n    if (beginning) {\n      this.middleware.unshift(middleware)\n    } else {\n      this.middleware.push(middleware)\n    }\n  }\n\n  fetch(url, {\n    method = 'GET',\n    base = this.base,\n    headers,\n    query,\n    params = {},\n    body,\n    readBody = this.readBody,\n    use = this.middleware,\n    useBefore = [],\n    useAfter = [],\n    ...rest } = {}\n  ) {\n    return new Promise(resolve => {\n      method = method.toUpperCase()\n      url = new URL(url.replace(/:([a-z]\\w*)/ig, (_, w) => encodeURIComponent(params[w])), base)\n\n      if (query) {\n        if (!(query instanceof URLSearchParams)) {\n          query = createURLSearchParams(query)\n        }\n\n        for (const [name, value] of query.entries()) {\n          url.searchParams.append(name, value)\n        }\n      }\n\n      if (this.headers && headers) {\n        const h = new Headers(this.headers)\n        for (const [name, value] of new Headers(headers).entries()) {\n          h.set(name, value)\n        }\n        headers = h\n      } else {\n        headers = new Headers(this.headers || headers || {})\n      }\n\n      if (body !== undefined && !['GET', 'HEAD'].includes(method)) {\n        const contentType = headers.get('Content-Type') || ''\n\n        if ((!contentType && body && body.constructor === Object) || contentType.startsWith('application/json')) {\n          if (!headers.has('Content-Type')) {\n            headers.set('Content-Type', 'application/json')\n          }\n\n          body = JSON.stringify(body)\n        } else if (contentType.startsWith('multipart/form-data') && body && !(body instanceof FormData)) {\n          body = createFormData(body)\n        } else if (contentType.startsWith('application/x-www-form-urlencoded') && body && !(body instanceof URLSearchParams)) {\n          body = createURLSearchParams(body)\n        }\n      }\n\n      const ctx = {\n        url,\n        options: { method, headers, body },\n        readBody,\n        ...rest\n      }\n\n      resolve(compose([...useBefore, ...use, ...useAfter])(ctx, () =>\n        fetch(ctx.url.href, ctx.options).then(response => {\n          ctx.response = response\n\n          let body = Promise.resolve()\n\n          if (readBody && ['GET', 'POST', 'PUT', 'DELETE', 'PATCH'].includes(ctx.options.method.toUpperCase())) {\n            const responseType = response.headers.get('Content-Type')\n\n            if (responseType) {\n              if (responseType.startsWith('application/json')) {\n                body = response.json()\n              } else if (responseType.startsWith('text/')) {\n                body = response.text()\n              } else if (responseType.startsWith('multipart/form-data')) {\n                body = response.formData()\n              }\n            }\n          }\n\n          if (response.ok) {\n            return body\n          } else {\n            return body.then(e => { throw e })\n          }\n        })\n      ))\n    })\n  }\n\n  get(url, query, options) {\n    return this.fetch(url, {\n      method: 'GET',\n      query,\n      ...options\n    })\n  }\n\n  post(url, body, options) {\n    return this.fetch(url, {\n      method: 'POST',\n      body,\n      ...options\n    })\n  }\n\n  put(url, body, options) {\n    return this.fetch(url, {\n      method: 'PUT',\n      body,\n      ...options\n    })\n  }\n\n  patch(url, body, options) {\n    return this.fetch(url, {\n      method: 'PATCH',\n      body,\n      ...options\n    })\n  }\n\n  delete(url, query, options) {\n    return this.fetch(url, {\n      method: 'DELETE',\n      query,\n      ...options\n    })\n  }\n\n  head(url, query, options) {\n    return this.fetch(url, {\n      method: 'HEAD',\n      query,\n      ...options\n    })\n  }\n}\n\nconst instance = Teleman.default = new Teleman()\nTeleman.use = instance.use.bind(instance)\nTeleman.fetch = instance.fetch.bind(instance)\nTeleman.get = instance.get.bind(instance)\nTeleman.post = instance.post.bind(instance)\nTeleman.put = instance.put.bind(instance)\nTeleman.patch = instance.patch.bind(instance)\nTeleman.delete = instance.delete.bind(instance)\nTeleman.head = instance.head.bind(instance)\n\nexport default Teleman\n"],"names":["createURLSearchParams","query","constructor","String","URLSearchParams","Object","entries","q","name","value","append","createFormData","data","f","FormData","filename","Teleman","base","headers","readBody","document","baseURI","e","middleware","use","beginning","unshift","push","fetch","url","method","params","body","useBefore","useAfter","rest","Promise","resolve","toUpperCase","URL","replace","_","w","encodeURIComponent","searchParams","h","Headers","set","undefined","includes","contentType","get","startsWith","has","JSON","stringify","ctx","options","compose","href","then","response","responseType","json","text","formData","ok","post","put","patch","delete","head","instance","default","bind"],"mappings":"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"}