{"version":3,"file":"Teleman.mjs","sources":["../src/index.mjs"],"sourcesContent":["import compose from 'koa-compose'\n\nfunction jsonifyable(val) {\n  return val === null || [Object, Array, String, Number, Boolean].includes(val.constructor) || !!val.toJSON\n}\n\nfunction createURLSearchParams(query) {\n  if (query.constructor === String) {\n    return new URLSearchParams(query)\n  }\n\n  if (query.constructor === Object) {\n    query = Object.entries(query)\n  }\n\n  const q = new URLSearchParams()\n\n  for (const [name, value] of query) {\n    if (value != null) q.append(name, value)\n  }\n\n  return q\n}\n\nfunction createFormData(data) {\n  if (data.constructor === Object) {\n    data = Object.entries(data)\n  }\n\n  const f = new FormData()\n\n  for (const [name, value, filename] of data) {\n    if (value != null) f.append(name, value, filename)\n  }\n\n  return f\n}\n\nclass Teleman {\n  constructor({ urlPrefix, headers, readBody = true } = {}) {\n    this.urlPrefix = urlPrefix\n    this.headers = headers\n    this.readBody = readBody\n    this.middleware = []\n  }\n\n  use(middleware) {\n    this.middleware.push(middleware)\n  }\n\n  fetch(url, {\n    method = 'GET',\n    urlPrefix = this.urlPrefix,\n    headers,\n    query,\n    params = {},\n    body,\n    readBody = this.readBody,\n    use = this.middleware,\n    useBefore = [],\n    useAfter = [],\n    ...rest } = {}\n  ) {\n    return new Promise(resolve => {\n      method = method.toUpperCase()\n\n      url = url.replace(/:([a-z]\\w*)/ig, (_, w) => params[w])\n\n      const absURL = /^https?:\\/\\//\n      if (!absURL.test(url)) {\n        if (urlPrefix) url = urlPrefix + url\n\n        // urlPrefix also isn't absolute\n        if (!absURL.test(url)) {\n          try {\n            const a = document.createElement('a')\n            a.href = url\n            url = a.href\n          } catch (e) {\n            // node.js env\n          }\n        }\n      }\n\n      url = new URL(url)\n\n      if (query) {\n        if (!(query instanceof URLSearchParams)) {\n          query = createURLSearchParams(query)\n        }\n\n        for (const [name, value] of query.entries()) {\n          url.searchParams.append(name, value)\n        }\n      }\n\n      url = url.href\n\n      if (this.headers && headers) {\n        const h = new Headers(this.headers)\n        for (const [name, value] of new Headers(headers).entries()) {\n          h.set(name, value)\n        }\n        headers = h\n      } else {\n        headers = new Headers(this.headers || headers || {})\n      }\n\n      if (body !== undefined && !['GET', 'HEAD'].includes(method)) {\n        const contentType = headers.get('Content-Type') || ''\n\n        if ((!contentType && jsonifyable(body)) || contentType.startsWith('application/json')) {\n          if (!headers.has('Content-Type')) {\n            headers.set('Content-Type', 'application/json')\n          }\n\n          body = JSON.stringify(body)\n        } else if (contentType.startsWith('multipart/form-data') && body && !(body instanceof FormData)) {\n          body = createFormData(body)\n        } else if (contentType.startsWith('application/x-www-form-urlencoded') && body && !(body instanceof URLSearchParams)) {\n          body = createURLSearchParams(body)\n        }\n      }\n\n      const ctx = {\n        url,\n        options: { method, headers, body },\n        readBody,\n        ...rest\n      }\n\n      resolve(compose([...useBefore, ...use, ...useAfter])(ctx, () =>\n        fetch(ctx.url, ctx.options).then(response => {\n          ctx.response = response\n\n          let body = Promise.resolve()\n\n          if (readBody && ['GET', 'POST', 'PUT', 'DELETE', 'PATCH'].includes(ctx.options.method.toUpperCase())) {\n            const responseType = response.headers.get('Content-Type')\n\n            if (responseType) {\n              if (responseType.startsWith('application/json')) {\n                body = response.json()\n              } else if (responseType.startsWith('text/')) {\n                body = response.text()\n              } else if (responseType.startsWith('multipart/form-data')) {\n                body = response.formData()\n              }\n            }\n          }\n\n          if (response.ok) {\n            return body\n          } else {\n            return body.then(e => { throw e })\n          }\n        })\n      ))\n    })\n  }\n\n  get(url, query, options) {\n    return this.fetch(url, {\n      method: 'GET',\n      query,\n      ...options\n    })\n  }\n\n  post(url, body, options) {\n    return this.fetch(url, {\n      method: 'POST',\n      body,\n      ...options\n    })\n  }\n\n  put(url, body, options) {\n    return this.fetch(url, {\n      method: 'PUT',\n      body,\n      ...options\n    })\n  }\n\n  patch(url, body, options) {\n    return this.fetch(url, {\n      method: 'PATCH',\n      body,\n      ...options\n    })\n  }\n\n  delete(url, query, options) {\n    return this.fetch(url, {\n      method: 'DELETE',\n      query,\n      ...options\n    })\n  }\n\n  head(url, query, options) {\n    return this.fetch(url, {\n      method: 'HEAD',\n      query,\n      ...options\n    })\n  }\n}\n\nconst instance = Teleman.default = new Teleman()\nTeleman.use = instance.use.bind(instance)\nTeleman.fetch = instance.fetch.bind(instance)\nTeleman.get = instance.get.bind(instance)\nTeleman.post = instance.post.bind(instance)\nTeleman.put = instance.put.bind(instance)\nTeleman.patch = instance.patch.bind(instance)\nTeleman.delete = instance.delete.bind(instance)\nTeleman.head = instance.head.bind(instance)\n\nexport default Teleman\n"],"names":["jsonifyable","val","Object","Array","String","Number","Boolean","includes","constructor","toJSON","createURLSearchParams","query","URLSearchParams","entries","q","name","value","append","createFormData","data","f","FormData","filename","Teleman","urlPrefix","headers","readBody","middleware","use","push","fetch","url","method","params","body","useBefore","useAfter","rest","Promise","resolve","toUpperCase","replace","_","w","absURL","test","a","document","createElement","href","e","URL","searchParams","h","Headers","set","undefined","contentType","get","startsWith","has","JSON","stringify","ctx","options","compose","then","response","responseType","json","text","formData","ok","post","put","patch","delete","head","instance","default","bind"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAASA,WAAT,CAAqBC,GAArB,EAA0B;SACjBA,GAAG,KAAK,IAAR,IAAgB,CAACC,MAAD,EAASC,KAAT,EAAgBC,MAAhB,EAAwBC,MAAxB,EAAgCC,OAAhC,EAAyCC,QAAzC,CAAkDN,GAAG,CAACO,WAAtD,CAAhB,IAAsF,CAAC,CAACP,GAAG,CAACQ,MAAnG;;;AAGF,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;MAChCA,KAAK,CAACH,WAAN,KAAsBJ,MAA1B,EAAkC;WACzB,IAAIQ,eAAJ,CAAoBD,KAApB,CAAP;;;MAGEA,KAAK,CAACH,WAAN,KAAsBN,MAA1B,EAAkC;IAChCS,KAAK,GAAGT,MAAM,CAACW,OAAP,CAAeF,KAAf,CAAR;;;MAGIG,CAAC,GAAG,IAAIF,eAAJ,EAAV;;uBAE4BD,KAA5B,kHAAmC;;;;;;;;;;;;;QAAvBI,IAAuB;QAAjBC,KAAiB;QAC7BA,KAAK,IAAI,IAAb,EAAmBF,CAAC,CAACG,MAAF,CAASF,IAAT,EAAeC,KAAf;;;SAGdF,CAAP;;;AAGF,SAASI,cAAT,CAAwBC,IAAxB,EAA8B;MACxBA,IAAI,CAACX,WAAL,KAAqBN,MAAzB,EAAiC;IAC/BiB,IAAI,GAAGjB,MAAM,CAACW,OAAP,CAAeM,IAAf,CAAP;;;MAGIC,CAAC,GAAG,IAAIC,QAAJ,EAAV;;wBAEsCF,IAAtC,yHAA4C;;;;;;;;;;;;;QAAhCJ,IAAgC;QAA1BC,KAA0B;QAAnBM,QAAmB;QACtCN,KAAK,IAAI,IAAb,EAAmBI,CAAC,CAACH,MAAF,CAASF,IAAT,EAAeC,KAAf,EAAsBM,QAAtB;;;SAGdF,CAAP;;;IAGIG;;;0BACsD;mCAAJ,EAAI;QAA5CC,SAA4C,SAA5CA,SAA4C;QAAjCC,OAAiC,SAAjCA,OAAiC;+BAAxBC,QAAwB;QAAxBA,QAAwB,+BAAb,IAAa;;SACnDF,SAAL,GAAiBA,SAAjB;SACKC,OAAL,GAAeA,OAAf;SACKC,QAAL,GAAgBA,QAAhB;SACKC,UAAL,GAAkB,EAAlB;;;;;SAGFC,MAAA,aAAID,UAAJ,EAAgB;SACTA,UAAL,CAAgBE,IAAhB,CAAqBF,UAArB;;;SAGFG;;;;;;;;;;IAAA,UAAMC,GAAN,UAYE;;;oCADY,EACZ;6BAXAC,MAWA;QAXAA,MAWA,6BAXS,KAWT;gCAVAR,SAUA;QAVAA,SAUA,gCAVY,KAAKA,SAUjB;QATAC,OASA,SATAA,OASA;QARAd,KAQA,SARAA,KAQA;6BAPAsB,MAOA;QAPAA,MAOA,6BAPS,EAOT;QANAC,IAMA,SANAA,IAMA;+BALAR,QAKA;QALAA,QAKA,+BALW,KAAKA,QAKhB;0BAJAE,GAIA;QAJAA,GAIA,0BAJM,KAAKD,UAIX;gCAHAQ,SAGA;QAHAA,SAGA,gCAHY,EAGZ;+BAFAC,QAEA;QAFAA,QAEA,+BAFW,EAEX;QADGC,IACH;;WACO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;MAC5BP,MAAM,GAAGA,MAAM,CAACQ,WAAP,EAAT;MAEAT,GAAG,GAAGA,GAAG,CAACU,OAAJ,CAAY,eAAZ,EAA6B,UAACC,CAAD,EAAIC,CAAJ;eAAUV,MAAM,CAACU,CAAD,CAAhB;OAA7B,CAAN;UAEMC,MAAM,GAAG,cAAf;;UACI,CAACA,MAAM,CAACC,IAAP,CAAYd,GAAZ,CAAL,EAAuB;YACjBP,SAAJ,EAAeO,GAAG,GAAGP,SAAS,GAAGO,GAAlB,CADM;;YAIjB,CAACa,MAAM,CAACC,IAAP,CAAYd,GAAZ,CAAL,EAAuB;cACjB;gBACIe,CAAC,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAV;YACAF,CAAC,CAACG,IAAF,GAASlB,GAAT;YACAA,GAAG,GAAGe,CAAC,CAACG,IAAR;WAHF,CAIE,OAAOC,CAAP,EAAU;;;;;MAMhBnB,GAAG,GAAG,IAAIoB,GAAJ,CAAQpB,GAAR,CAAN;;UAEIpB,KAAJ,EAAW;YACL,EAAEA,KAAK,YAAYC,eAAnB,CAAJ,EAAyC;UACvCD,KAAK,GAAGD,qBAAqB,CAACC,KAAD,CAA7B;;;8BAG0BA,KAAK,CAACE,OAAN,EAA5B,yHAA6C;;;;;;;;;;;;;cAAjCE,IAAiC;cAA3BC,KAA2B;UAC3Ce,GAAG,CAACqB,YAAJ,CAAiBnC,MAAjB,CAAwBF,IAAxB,EAA8BC,KAA9B;;;;MAIJe,GAAG,GAAGA,GAAG,CAACkB,IAAV;;UAEI,KAAI,CAACxB,OAAL,IAAgBA,OAApB,EAA6B;YACrB4B,CAAC,GAAG,IAAIC,OAAJ,CAAY,KAAI,CAAC7B,OAAjB,CAAV;;8BAC4B,IAAI6B,OAAJ,CAAY7B,OAAZ,EAAqBZ,OAArB,EAA5B,yHAA4D;;;;;;;;;;;;;cAAhDE,IAAgD;cAA1CC,KAA0C;UAC1DqC,CAAC,CAACE,GAAF,CAAMxC,IAAN,EAAYC,KAAZ;;;QAEFS,OAAO,GAAG4B,CAAV;OALF,MAMO;QACL5B,OAAO,GAAG,IAAI6B,OAAJ,CAAY,KAAI,CAAC7B,OAAL,IAAgBA,OAAhB,IAA2B,EAAvC,CAAV;;;UAGES,IAAI,KAAKsB,SAAT,IAAsB,CAAC,CAAC,KAAD,EAAQ,MAAR,EAAgBjD,QAAhB,CAAyByB,MAAzB,CAA3B,EAA6D;YACrDyB,WAAW,GAAGhC,OAAO,CAACiC,GAAR,CAAY,cAAZ,KAA+B,EAAnD;;YAEK,CAACD,WAAD,IAAgBzD,WAAW,CAACkC,IAAD,CAA5B,IAAuCuB,WAAW,CAACE,UAAZ,CAAuB,kBAAvB,CAA3C,EAAuF;cACjF,CAAClC,OAAO,CAACmC,GAAR,CAAY,cAAZ,CAAL,EAAkC;YAChCnC,OAAO,CAAC8B,GAAR,CAAY,cAAZ,EAA4B,kBAA5B;;;UAGFrB,IAAI,GAAG2B,IAAI,CAACC,SAAL,CAAe5B,IAAf,CAAP;SALF,MAMO,IAAIuB,WAAW,CAACE,UAAZ,CAAuB,qBAAvB,KAAiDzB,IAAjD,IAAyD,EAAEA,IAAI,YAAYb,QAAlB,CAA7D,EAA0F;UAC/Fa,IAAI,GAAGhB,cAAc,CAACgB,IAAD,CAArB;SADK,MAEA,IAAIuB,WAAW,CAACE,UAAZ,CAAuB,mCAAvB,KAA+DzB,IAA/D,IAAuE,EAAEA,IAAI,YAAYtB,eAAlB,CAA3E,EAA+G;UACpHsB,IAAI,GAAGxB,qBAAqB,CAACwB,IAAD,CAA5B;;;;UAIE6B,GAAG;QACPhC,GAAG,EAAHA,GADO;QAEPiC,OAAO,EAAE;UAAEhC,MAAM,EAANA,MAAF;UAAUP,OAAO,EAAPA,OAAV;UAAmBS,IAAI,EAAJA;SAFrB;QAGPR,QAAQ,EAARA;SACGW,IAJI,CAAT;;MAOAE,OAAO,CAAC0B,OAAO,WAAK9B,SAAL,EAAmBP,GAAnB,EAA2BQ,QAA3B,EAAP,CAA6C2B,GAA7C,EAAkD;eACxDjC,KAAK,CAACiC,GAAG,CAAChC,GAAL,EAAUgC,GAAG,CAACC,OAAd,CAAL,CAA4BE,IAA5B,CAAiC,UAAAC,QAAQ,EAAI;UAC3CJ,GAAG,CAACI,QAAJ,GAAeA,QAAf;cAEIjC,IAAI,GAAGI,OAAO,CAACC,OAAR,EAAX;;cAEIb,QAAQ,IAAI,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,QAAvB,EAAiC,OAAjC,EAA0CnB,QAA1C,CAAmDwD,GAAG,CAACC,OAAJ,CAAYhC,MAAZ,CAAmBQ,WAAnB,EAAnD,CAAhB,EAAsG;gBAC9F4B,YAAY,GAAGD,QAAQ,CAAC1C,OAAT,CAAiBiC,GAAjB,CAAqB,cAArB,CAArB;;gBAEIU,YAAJ,EAAkB;kBACZA,YAAY,CAACT,UAAb,CAAwB,kBAAxB,CAAJ,EAAiD;gBAC/CzB,IAAI,GAAGiC,QAAQ,CAACE,IAAT,EAAP;eADF,MAEO,IAAID,YAAY,CAACT,UAAb,CAAwB,OAAxB,CAAJ,EAAsC;gBAC3CzB,IAAI,GAAGiC,QAAQ,CAACG,IAAT,EAAP;eADK,MAEA,IAAIF,YAAY,CAACT,UAAb,CAAwB,qBAAxB,CAAJ,EAAoD;gBACzDzB,IAAI,GAAGiC,QAAQ,CAACI,QAAT,EAAP;;;;;cAKFJ,QAAQ,CAACK,EAAb,EAAiB;mBACRtC,IAAP;WADF,MAEO;mBACEA,IAAI,CAACgC,IAAL,CAAU,UAAAhB,CAAC,EAAI;oBAAQA,CAAN;aAAjB,CAAP;;SAtBJ,CADwD;OAAlD,CAAD,CAAP;KApEK,CAAP;;;SAkGFQ,MAAA,aAAI3B,GAAJ,EAASpB,KAAT,EAAgBqD,OAAhB,EAAyB;WAChB,KAAKlC,KAAL,CAAWC,GAAX;MACLC,MAAM,EAAE,KADH;MAELrB,KAAK,EAALA;OACGqD,OAHE,EAAP;;;SAOFS,OAAA,cAAK1C,GAAL,EAAUG,IAAV,EAAgB8B,OAAhB,EAAyB;WAChB,KAAKlC,KAAL,CAAWC,GAAX;MACLC,MAAM,EAAE,MADH;MAELE,IAAI,EAAJA;OACG8B,OAHE,EAAP;;;SAOFU,MAAA,aAAI3C,GAAJ,EAASG,IAAT,EAAe8B,OAAf,EAAwB;WACf,KAAKlC,KAAL,CAAWC,GAAX;MACLC,MAAM,EAAE,KADH;MAELE,IAAI,EAAJA;OACG8B,OAHE,EAAP;;;SAOFW,QAAA,eAAM5C,GAAN,EAAWG,IAAX,EAAiB8B,OAAjB,EAA0B;WACjB,KAAKlC,KAAL,CAAWC,GAAX;MACLC,MAAM,EAAE,OADH;MAELE,IAAI,EAAJA;OACG8B,OAHE,EAAP;;;SAOFY,SAAA,iBAAO7C,GAAP,EAAYpB,KAAZ,EAAmBqD,OAAnB,EAA4B;WACnB,KAAKlC,KAAL,CAAWC,GAAX;MACLC,MAAM,EAAE,QADH;MAELrB,KAAK,EAALA;OACGqD,OAHE,EAAP;;;SAOFa,OAAA,cAAK9C,GAAL,EAAUpB,KAAV,EAAiBqD,OAAjB,EAA0B;WACjB,KAAKlC,KAAL,CAAWC,GAAX;MACLC,MAAM,EAAE,MADH;MAELrB,KAAK,EAALA;OACGqD,OAHE,EAAP;;;;;;AAQJ,IAAMc,QAAQ,GAAGvD,OAAO,CAACwD,OAAR,GAAkB,IAAIxD,OAAJ,EAAnC;AACAA,OAAO,CAACK,GAAR,GAAckD,QAAQ,CAAClD,GAAT,CAAaoD,IAAb,CAAkBF,QAAlB,CAAd;AACAvD,OAAO,CAACO,KAAR,GAAgBgD,QAAQ,CAAChD,KAAT,CAAekD,IAAf,CAAoBF,QAApB,CAAhB;AACAvD,OAAO,CAACmC,GAAR,GAAcoB,QAAQ,CAACpB,GAAT,CAAasB,IAAb,CAAkBF,QAAlB,CAAd;AACAvD,OAAO,CAACkD,IAAR,GAAeK,QAAQ,CAACL,IAAT,CAAcO,IAAd,CAAmBF,QAAnB,CAAf;AACAvD,OAAO,CAACmD,GAAR,GAAcI,QAAQ,CAACJ,GAAT,CAAaM,IAAb,CAAkBF,QAAlB,CAAd;AACAvD,OAAO,CAACoD,KAAR,GAAgBG,QAAQ,CAACH,KAAT,CAAeK,IAAf,CAAoBF,QAApB,CAAhB;AACAvD,OAAO,CAACqD,MAAR,GAAiBE,QAAQ,CAACF,MAAT,CAAgBI,IAAhB,CAAqBF,QAArB,CAAjB;AACAvD,OAAO,CAACsD,IAAR,GAAeC,QAAQ,CAACD,IAAT,CAAcG,IAAd,CAAmBF,QAAnB,CAAf;;;;"}