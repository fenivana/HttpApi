{"version":3,"file":"Teleman.mjs","sources":["../src/index.mjs"],"sourcesContent":["class Teleman {\n  constructor({ base = '', requestOptions = {}, beforeCreateRequest, complete, error } = {}) {\n    this.base = base\n    this.requestOptions = requestOptions\n    this.beforeCreateRequest = beforeCreateRequest\n    this.complete = complete\n    this.error = error\n  }\n\n  fetch(url, { method = 'GET', headers, query, body, type } = {}) {\n    return new Promise(resolve => {\n      if (this.base && !/^http(s?):/.test(url)) {\n        url = this.base + url\n      }\n\n      method = method.toUpperCase()\n\n      if (query) {\n        url = new URL(url)\n\n        if (!(query instanceof URLSearchParams)) {\n          // filter null/undefined\n          if (query.constructor === Object) {\n            query = Object.entries(query)\n          }\n\n          if (query instanceof Array) {\n            const q = new URLSearchParams()\n            query.forEach(([name, value]) => {\n              if (value != null) q.append(name, value)\n            })\n            query = q\n          } else if (query.constructor === String) {\n            query = new URLSearchParams(query)\n          }\n        }\n\n        for (const [name, value] of query.entries()) {\n          url.searchParams.append(name, value)\n        }\n\n        url = url.href\n      }\n\n      if (this.requestOptions.headers && headers) {\n        const h = new Headers(this.requestOptions.headers)\n        for (const [name, value] of new Headers(headers).entries()) {\n          h.set(name, value)\n        }\n        headers = h\n      } else {\n        headers = new Headers(this.requestOptions.headers || headers || undefined)\n      }\n\n      if (['POST', 'PUT', 'PATCH'].includes(method)) {\n        if (type === 'json' || !type && body && body.constructor === Object) {\n          if (!headers.has('Content-Type')) {\n            headers.set('Content-Type', 'application/json')\n          }\n\n          body = JSON.stringify(body)\n        } else if (type === 'form' && !(body instanceof FormData)) {\n          const form = new FormData()\n\n          for (const k in body) {\n            form.append(k, body[k])\n          }\n\n          body = form\n        }\n      }\n\n      let options = { ...this.requestOptions, method, headers, body }\n\n      if (this.beforeCreateRequest) {\n        const modified = this.beforeCreateRequest(url, options)\n        if (modified && modified.url && modified.options) {\n          ({ url, options } = modified)\n        }\n      }\n\n      const request = new Request(url, options)\n\n      resolve(fetch(request).then(response => {\n        let body\n\n        if (['GET', 'POST', 'PUT', 'DELETE', 'PATCH'].includes(method)) {\n          const contentType = response.headers.get('Content-Type')\n          if (contentType) {\n            if (contentType.startsWith('application/json')) {\n              body = response.json()\n            } else if (contentType.startsWith('text/')) {\n              body = response.text()\n            }\n          }\n        }\n\n        // if complete handler is given, you should check response.ok yourself in the handler\n        if (this.complete) {\n          return body\n            ? body.then(body => this.complete({ request, response, body }))\n            : this.complete({ request, response, body })\n        } else if (response.ok) {\n          return body || response\n        } else {\n          throw body || response\n        }\n      }, error => {\n        if (this.error) this.error({ request, error })\n        else throw error\n      }))\n    })\n  }\n\n  get(url, query, options) {\n    return this.fetch(url, {\n      method: 'GET',\n      query,\n      ...options\n    })\n  }\n\n  post(url, body, options) {\n    return this.fetch(url, {\n      method: 'POST',\n      body,\n      ...options\n    })\n  }\n\n  put(url, body, options) {\n    return this.fetch(url, {\n      method: 'PUT',\n      body,\n      ...options\n    })\n  }\n\n  patch(url, body, options) {\n    return this.fetch(url, {\n      method: 'PATCH',\n      body,\n      ...options\n    })\n  }\n\n  delete(url, query, options) {\n    return this.fetch(url, {\n      method: 'DELETE',\n      query,\n      ...options\n    })\n  }\n\n  head(url, query, options) {\n    return this.fetch(url, {\n      method: 'HEAD',\n      query,\n      ...options\n    })\n  }\n}\n\nexport default Teleman\n"],"names":["Teleman","base","requestOptions","beforeCreateRequest","complete","error","fetch","url","method","headers","query","body","type","Promise","resolve","test","toUpperCase","URL","URLSearchParams","constructor","Object","entries","Array","q","forEach","name","value","append","String","searchParams","href","h","Headers","set","undefined","includes","has","JSON","stringify","FormData","form","k","options","modified","request","Request","then","response","contentType","get","startsWith","json","text","ok","post","put","patch","delete","head"],"mappings":"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"}