{"version":3,"file":"Teleman.esm.js","sources":["../src/index.js"],"sourcesContent":["class Teleman {\n  constructor({ base = '', fetchOptions = {}, beforeFetch, complete, error } = {}) {\n    this.base = base\n    this.fetchOptions = fetchOptions || {}\n    this.beforeFetch = beforeFetch\n    this.complete = complete\n    this.error = error\n  }\n\n  fetch(url, { method = 'GET', headers, query, body, type } = {}) {\n    if (this.base) url = this.base + url\n    method = method.toUpperCase()\n\n    if (query) {\n      url = new URL(url)\n\n      if (!(query instanceof URLSearchParams)) {\n        // filter null/undefined\n        if (query.constructor === Object) {\n          query = Object.entries(query)\n        }\n\n        if (query instanceof Array) {\n          const q = new URLSearchParams()\n          query.forEach(([name, value]) => {\n            if (value != null) q.append(name, value)\n          })\n          query = q\n        } else if (query.constructor === String) {\n          query = new URLSearchParams(query)\n        }\n      }\n\n      for (const [name, value] of query.entries()) {\n        url.searchParams.append(name, value)\n      }\n\n      url = url.href\n    }\n\n    if (this.fetchOptions.headers && headers) {\n      const h = new Headers(this.fetchOptions.headers)\n      for (const [name, value] of new Headers(headers).entries()) {\n        h.set(name, value)\n      }\n      headers = h\n    } else {\n      headers = new Headers(this.fetchOptions.headers || headers || undefined)\n    }\n\n    if (['POST', 'PUT', 'PATCH'].includes(method)) {\n      if (type === 'json' || !type && body && body.constructor === Object) {\n        if (!headers.has('Content-Type')) {\n          headers.set('Content-Type', 'application/json')\n        }\n\n        body = JSON.stringify(body)\n      } else if (type === 'form' && !(body instanceof FormData)) {\n        const form = new FormData()\n\n        for (const k in body) {\n          form.append(k, body[k])\n        }\n\n        body = form\n      }\n    }\n\n    let options = { ...this.fetchOptions, method, headers, body }\n\n    if (this.beforeFetch) {\n      const modified = this.beforeFetch(url, options)\n      if (modified && modified.url && modified.options) {\n        ({ url, options } = modified)\n      }\n    }\n\n    const request = new Request(url, options)\n\n    return fetch(request).then(response => {\n      let body\n\n      if (['GET', 'POST', 'PUT', 'DELETE', 'PATCH'].includes(method)) {\n        const contentType = response.headers.get('Content-Type')\n        if (contentType) {\n          if (contentType.startsWith('application/json')) {\n            body = response.json()\n          } else if (contentType.startsWith('text/')) {\n            body = response.text()\n          }\n        }\n      }\n\n      // if complete handler is given, you should check response.ok yourself in the handler\n      if (this.complete) {\n        return body\n          ? body.then(body => this.complete({ request, response, body }))\n          : this.complete({ request, response, body })\n      } else if (response.ok) {\n        return body || response\n      } else {\n        throw body || response\n      }\n    }, error => {\n      if (this.error) this.error({ request, error })\n      else throw error\n    })\n  }\n\n  get(url, query, options) {\n    return this.fetch(url, {\n      method: 'GET',\n      query,\n      ...options\n    })\n  }\n\n  post(url, body, options) {\n    return this.fetch(url, {\n      method: 'POST',\n      body,\n      ...options\n    })\n  }\n\n  put(url, body, options) {\n    return this.fetch(url, {\n      method: 'PUT',\n      body,\n      ...options\n    })\n  }\n\n  patch(url, body, options) {\n    return this.fetch(url, {\n      method: 'PATCH',\n      body,\n      ...options\n    })\n  }\n\n  delete(url, query, options) {\n    return this.fetch(url, {\n      method: 'DELETE',\n      query,\n      ...options\n    })\n  }\n\n  head(url, query, options) {\n    return this.fetch(url, {\n      method: 'HEAD',\n      query,\n      ...options\n    })\n  }\n\n  options(url, query, options) {\n    return this.fetch(url, {\n      method: 'OPTIONS',\n      query,\n      ...options\n    })\n  }\n}\n\nexport default Teleman\n"],"names":["Teleman","base","fetchOptions","beforeFetch","complete","error","fetch","url","method","headers","query","body","type","toUpperCase","URL","URLSearchParams","constructor","Object","entries","Array","q","forEach","name","value","append","String","searchParams","href","h","Headers","set","undefined","includes","has","JSON","stringify","FormData","form","k","options","modified","request","Request","then","contentType","response","get","startsWith","json","text","ok","post","put","patch","delete","head"],"mappings":"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"}