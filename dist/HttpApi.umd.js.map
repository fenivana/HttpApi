{"version":3,"file":"HttpApi.umd.js","sources":["../src/index.js"],"sourcesContent":["class HttpApi {\n  constructor({ base = '', fetchOptions = {}, beforeFetch, complete, error } = {}) {\n    this.base = base\n    this.fetchOptions = fetchOptions || {}\n    this.beforeFetch = beforeFetch\n    this.complete = complete\n    this.error = error\n  }\n\n  fetch(url, { method = 'GET', headers, query, body, type } = {}) {\n    if (this.base) url = this.base + url\n    method = method.toUpperCase()\n\n    if (query) {\n      url = new URL(url)\n\n      if (!(query instanceof URLSearchParams)) {\n        // filter null/undefined\n        if (query.constructor === Object) {\n          query = Object.entries(query)\n        }\n\n        if (query instanceof Array) {\n          const q = new URLSearchParams()\n          query.forEach(([name, value]) => {\n            if (value != null) q.append(name, value)\n          })\n          query = q\n        } else if (query.constructor === String) {\n          query = new URLSearchParams(query)\n        }\n      }\n\n      for (const [name, value] of query.entries()) {\n        url.searchParams.append(name, value)\n      }\n\n      url = url.toString()\n    }\n\n    if (this.fetchOptions.headers && headers) {\n      const h = new Headers(this.fetchOptions.headers)\n      for (const [name, value] of new Headers(headers).entries()) {\n        h.set(name, value)\n      }\n      headers = h\n    } else {\n      headers = new Headers(this.fetchOptions.headers || headers || undefined)\n    }\n\n    if (['POST', 'PUT', 'PATCH'].includes(method)) {\n      if (type === 'json' || !type && body && body.constructor === Object) {\n        if (!headers.has('Content-Type')) {\n          headers.set('Content-Type', 'application/json')\n        }\n\n        body = JSON.stringify(body)\n      } else if (type === 'form' && !(body instanceof FormData)) {\n        const form = new FormData()\n\n        for (const k in body) {\n          form.append(k, body[k])\n        }\n\n        body = form\n      }\n    }\n\n    let options = { ...this.fetchOptions, method, headers, body }\n\n    if (this.beforeFetch) {\n      const modified = this.beforeFetch(url, options)\n      if (modified && modified.url && modified.options) {\n        ({ url, options } = modified)\n      }\n    }\n\n    const request = new Request(url, options)\n\n    return fetch(request).then(response => {\n      let body\n      const contentType = response.headers.get('Content-Type')\n      if (contentType && contentType.includes('json')) {\n        body = response.json()\n      }\n\n      // if complete handler is given, you should check response.ok yourself in the handler\n      if (this.complete) {\n        return body\n          ? body.then(body => this.complete({ request, response, body }))\n          : this.complete({ request, response, body })\n      } else if (response.ok) {\n        return body || response\n      } else {\n        throw body || response\n      }\n    }, error => {\n      if (this.error) this.error({ request, error })\n      else throw error\n    })\n  }\n\n  get(url, query, options) {\n    return this.fetch(url, {\n      method: 'GET',\n      query,\n      ...options\n    })\n  }\n\n  post(url, body, options) {\n    return this.fetch(url, {\n      method: 'POST',\n      body,\n      ...options\n    })\n  }\n\n  put(url, body, options) {\n    return this.fetch(url, {\n      method: 'PUT',\n      body,\n      ...options\n    })\n  }\n\n  patch(url, body, options) {\n    return this.fetch(url, {\n      method: 'PATCH',\n      body,\n      ...options\n    })\n  }\n\n  delete(url, query, options) {\n    return this.fetch(url, {\n      method: 'DELETE',\n      query,\n      ...options\n    })\n  }\n\n  head(url, query, options) {\n    return this.fetch(url, {\n      method: 'HEAD',\n      query,\n      ...options\n    })\n  }\n\n  options(url, query, options) {\n    return this.fetch(url, {\n      method: 'OPTIONS',\n      query,\n      ...options\n    })\n  }\n}\n\nexport default HttpApi\n"],"names":["HttpApi","base","fetchOptions","beforeFetch","complete","error","fetch","url","method","headers","query","body","type","toUpperCase","URL","URLSearchParams","constructor","Object","entries","Array","q","forEach","name","value","append","String","searchParams","toString","h","Headers","set","undefined","includes","has","JSON","stringify","FormData","form","k","options","modified","request","Request","then","contentType","response","get","json","ok","post","put","patch","delete","head"],"mappings":"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"}