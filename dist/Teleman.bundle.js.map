{"version":3,"file":"Teleman.bundle.js","sources":["../node_modules/.registry.npmjs.org/koa-compose/4.1.0/node_modules/koa-compose/index.js","../src/index.mjs"],"sourcesContent":["'use strict'\n\n/**\n * Expose compositor.\n */\n\nmodule.exports = compose\n\n/**\n * Compose `middleware` returning\n * a fully valid middleware comprised\n * of all those which are passed.\n *\n * @param {Array} middleware\n * @return {Function}\n * @api public\n */\n\nfunction compose (middleware) {\n  if (!Array.isArray(middleware)) throw new TypeError('Middleware stack must be an array!')\n  for (const fn of middleware) {\n    if (typeof fn !== 'function') throw new TypeError('Middleware must be composed of functions!')\n  }\n\n  /**\n   * @param {Object} context\n   * @return {Promise}\n   * @api public\n   */\n\n  return function (context, next) {\n    // last called middleware #\n    let index = -1\n    return dispatch(0)\n    function dispatch (i) {\n      if (i <= index) return Promise.reject(new Error('next() called multiple times'))\n      index = i\n      let fn = middleware[i]\n      if (i === middleware.length) fn = next\n      if (!fn) return Promise.resolve()\n      try {\n        return Promise.resolve(fn(context, dispatch.bind(null, i + 1)));\n      } catch (err) {\n        return Promise.reject(err)\n      }\n    }\n  }\n}\n","import compose from 'koa-compose'\n\nfunction jsonifyable(val) {\n  return val === null || [Object, Array, String, Number, Boolean].includes(val.constructor) || !!val.toJSON\n}\n\nfunction createURLSearchParams(query) {\n  if (query.constructor === String) {\n    return new URLSearchParams(query)\n  }\n\n  if (query.constructor === Object) {\n    query = Object.entries(query)\n  }\n\n  const q = new URLSearchParams()\n\n  for (const [name, value] of query) {\n    if (value != null) q.append(name, value)\n  }\n\n  return q\n}\n\nfunction createFormData(data) {\n  if (data.constructor === Object) {\n    data = Object.entries(data)\n  }\n\n  const f = new FormData()\n\n  for (const [name, value, filename] of data) {\n    if (value != null) f.append(name, value, filename)\n  }\n\n  return f\n}\n\nclass Teleman {\n  constructor({ urlPrefix, headers, readBody = true } = {}) {\n    this.urlPrefix = urlPrefix\n    this.headers = headers\n    this.readBody = readBody\n    this.middleware = []\n  }\n\n  use(middleware) {\n    this.middleware.push(middleware)\n  }\n\n  fetch(url, {\n    method = 'GET',\n    urlPrefix = this.urlPrefix,\n    headers,\n    query,\n    params = {},\n    body,\n    readBody = this.readBody,\n    use = this.middleware,\n    useBefore = [],\n    useAfter = [],\n    ...rest } = {}\n  ) {\n    return new Promise(resolve => {\n      method = method.toUpperCase()\n\n      url = url.replace(/:([a-z]\\w*)/ig, (_, w) => params[w])\n\n      const absURL = /^https?:\\/\\//\n      if (!absURL.test(url)) {\n        if (urlPrefix) url = urlPrefix + url\n\n        // urlPrefix also isn't absolute\n        if (!absURL.test(url)) {\n          try {\n            const a = document.createElement('a')\n            a.href = url\n            url = a.href\n          } catch (e) {\n            // node.js env\n          }\n        }\n      }\n\n      url = new URL(url)\n\n      if (query) {\n        if (!(query instanceof URLSearchParams)) {\n          query = createURLSearchParams(query)\n        }\n\n        for (const [name, value] of query.entries()) {\n          url.searchParams.append(name, value)\n        }\n      }\n\n      url = url.href\n\n      if (this.headers && headers) {\n        const h = new Headers(this.headers)\n        for (const [name, value] of new Headers(headers).entries()) {\n          h.set(name, value)\n        }\n        headers = h\n      } else {\n        headers = new Headers(this.headers || headers || {})\n      }\n\n      if (body !== undefined && !['GET', 'HEAD'].includes(method)) {\n        const contentType = headers.get('Content-Type') || ''\n\n        if ((!contentType && jsonifyable(body)) || contentType.startsWith('application/json')) {\n          if (!headers.has('Content-Type')) {\n            headers.set('Content-Type', 'application/json')\n          }\n\n          body = JSON.stringify(body)\n        } else if (contentType.startsWith('multipart/form-data') && body && !(body instanceof FormData)) {\n          body = createFormData(body)\n        } else if (contentType.startsWith('application/x-www-form-urlencoded') && body && !(body instanceof URLSearchParams)) {\n          body = createURLSearchParams(body)\n        }\n      }\n\n      const ctx = {\n        url,\n        options: { method, headers, body },\n        readBody,\n        ...rest\n      }\n\n      resolve(compose([...useBefore, ...use, ...useAfter])(ctx, () =>\n        fetch(ctx.url, ctx.options).then(response => {\n          ctx.response = response\n\n          let body = Promise.resolve()\n\n          if (readBody && ['GET', 'POST', 'PUT', 'DELETE', 'PATCH'].includes(ctx.options.method.toUpperCase())) {\n            const responseType = response.headers.get('Content-Type')\n\n            if (responseType) {\n              if (responseType.startsWith('application/json')) {\n                body = response.json()\n              } else if (responseType.startsWith('text/')) {\n                body = response.text()\n              } else if (responseType.startsWith('multipart/form-data')) {\n                body = response.formData()\n              }\n            }\n          }\n\n          if (response.ok) {\n            return body\n          } else {\n            return body.then(e => { throw e })\n          }\n        })\n      ))\n    })\n  }\n\n  get(url, query, options) {\n    return this.fetch(url, {\n      method: 'GET',\n      query,\n      ...options\n    })\n  }\n\n  post(url, body, options) {\n    return this.fetch(url, {\n      method: 'POST',\n      body,\n      ...options\n    })\n  }\n\n  put(url, body, options) {\n    return this.fetch(url, {\n      method: 'PUT',\n      body,\n      ...options\n    })\n  }\n\n  patch(url, body, options) {\n    return this.fetch(url, {\n      method: 'PATCH',\n      body,\n      ...options\n    })\n  }\n\n  delete(url, query, options) {\n    return this.fetch(url, {\n      method: 'DELETE',\n      query,\n      ...options\n    })\n  }\n\n  head(url, query, options) {\n    return this.fetch(url, {\n      method: 'HEAD',\n      query,\n      ...options\n    })\n  }\n}\n\nconst instance = Teleman.default = new Teleman()\nTeleman.use = instance.use.bind(instance)\nTeleman.fetch = instance.fetch.bind(instance)\nTeleman.get = instance.get.bind(instance)\nTeleman.post = instance.post.bind(instance)\nTeleman.put = instance.put.bind(instance)\nTeleman.patch = instance.patch.bind(instance)\nTeleman.delete = instance.delete.bind(instance)\nTeleman.head = instance.head.bind(instance)\n\nexport default Teleman\n"],"names":["compose","middleware","Array","isArray","TypeError","fn","context","next","index","dispatch","i","Promise","reject","Error","length","resolve","bind","err","jsonifyable","val","Object","String","Number","Boolean","includes","constructor","toJSON","createURLSearchParams","query","URLSearchParams","entries","q","name","value","append","createFormData","data","f","FormData","filename","Teleman","urlPrefix","headers","readBody","use","push","fetch","url","method","params","body","useBefore","useAfter","rest","toUpperCase","replace","_","w","absURL","test","a","document","createElement","href","e","URL","searchParams","h","Headers","set","undefined","contentType","get","startsWith","has","JSON","stringify","ctx","options","then","response","responseType","json","text","formData","ok","post","put","patch","delete","head","instance","default"],"mappings":"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"}