{"version":3,"file":"Teleman.bundle.js","sources":["../node_modules/.registry.npmjs.org/koa-compose/4.1.0/node_modules/koa-compose/index.js","../src/index.mjs"],"sourcesContent":["'use strict'\n\n/**\n * Expose compositor.\n */\n\nmodule.exports = compose\n\n/**\n * Compose `middleware` returning\n * a fully valid middleware comprised\n * of all those which are passed.\n *\n * @param {Array} middleware\n * @return {Function}\n * @api public\n */\n\nfunction compose (middleware) {\n  if (!Array.isArray(middleware)) throw new TypeError('Middleware stack must be an array!')\n  for (const fn of middleware) {\n    if (typeof fn !== 'function') throw new TypeError('Middleware must be composed of functions!')\n  }\n\n  /**\n   * @param {Object} context\n   * @return {Promise}\n   * @api public\n   */\n\n  return function (context, next) {\n    // last called middleware #\n    let index = -1\n    return dispatch(0)\n    function dispatch (i) {\n      if (i <= index) return Promise.reject(new Error('next() called multiple times'))\n      index = i\n      let fn = middleware[i]\n      if (i === middleware.length) fn = next\n      if (!fn) return Promise.resolve()\n      try {\n        return Promise.resolve(fn(context, dispatch.bind(null, i + 1)));\n      } catch (err) {\n        return Promise.reject(err)\n      }\n    }\n  }\n}\n","import compose from 'koa-compose'\n\nfunction createURLSearchParams(query) {\n  if (query.constructor === String) {\n    return new URLSearchParams(query)\n  }\n\n  if (query.constructor === Object) {\n    query = Object.entries(query)\n  }\n\n  const q = new URLSearchParams()\n\n  for (const [name, value] of query) {\n    if (value != null) q.append(name, value)\n  }\n\n  return q\n}\n\nfunction createFormData(data) {\n  if (data.constructor === Object) {\n    data = Object.entries(data)\n  }\n\n  const f = new FormData()\n\n  for (const [name, value, filename] of data) {\n    if (value != null) f.append(name, value, filename)\n  }\n\n  return f\n}\n\nclass Teleman {\n  constructor({ base, headers, readBody = true, throwFailedResponse = true } = {}) {\n    if (base) {\n      this.base = base\n    } else {\n      try {\n        // defaults to document.baseURI in browser\n        this.base = document.baseURI\n      } catch (e) {\n        // in node.js, ignore\n      }\n    }\n\n    this.headers = headers\n    this.readBody = readBody\n    this.throwFailedResponse = throwFailedResponse\n    this.middleware = []\n  }\n\n  use(middleware, beginning = false) {\n    if (beginning) {\n      this.middleware.unshift(middleware)\n    } else {\n      this.middleware.push(middleware)\n    }\n  }\n\n  fetch(url, {\n    method = 'GET',\n    base = this.base,\n    headers,\n    query,\n    params = {},\n    body,\n    readBody = this.readBody,\n    throwFailedResponse = this.throwFailedResponse,\n    use = this.middleware,\n    useBefore = [],\n    useAfter = [],\n    ...rest } = {}\n  ) {\n    return new Promise(resolve => {\n      method = method.toUpperCase()\n      url = new URL(url.replace(/:([a-z]\\w*)/ig, (_, w) => encodeURIComponent(params[w])), base)\n\n      if (query) {\n        if (!(query instanceof URLSearchParams)) {\n          query = createURLSearchParams(query)\n        }\n\n        for (const [name, value] of query.entries()) {\n          url.searchParams.append(name, value)\n        }\n      }\n\n      if (this.headers && headers) {\n        const h = new Headers(this.headers)\n        for (const [name, value] of new Headers(headers).entries()) {\n          h.set(name, value)\n        }\n        headers = h\n      } else {\n        headers = new Headers(this.headers || headers || {})\n      }\n\n      if (body !== undefined && !['GET', 'HEAD'].includes(method)) {\n        const contentType = headers.get('Content-Type') || ''\n\n        if ((!contentType && body && body.constructor === Object) || contentType.startsWith('application/json')) {\n          if (!headers.has('Content-Type')) {\n            headers.set('Content-Type', 'application/json')\n          }\n\n          body = JSON.stringify(body)\n        } else if (contentType.startsWith('multipart/form-data') && body && !(body instanceof FormData)) {\n          body = createFormData(body)\n        } else if (contentType.startsWith('application/x-www-form-urlencoded') && body && !(body instanceof URLSearchParams)) {\n          body = createURLSearchParams(body)\n        }\n      }\n\n      const ctx = {\n        url,\n        options: { method, headers, body },\n        readBody,\n        ...rest\n      }\n\n      resolve(compose([...useBefore, ...use, ...useAfter])(ctx, () =>\n        fetch(ctx.url.href, ctx.options).then(response => {\n          ctx.response = response\n\n          let body = Promise.resolve()\n\n          if (readBody && ['GET', 'POST', 'PUT', 'DELETE', 'PATCH'].includes(ctx.options.method.toUpperCase())) {\n            const responseType = response.headers.get('Content-Type')\n\n            if (responseType) {\n              if (responseType.startsWith('application/json')) {\n                body = response.json()\n              } else if (responseType.startsWith('text/')) {\n                body = response.text()\n              } else if (responseType.startsWith('multipart/form-data')) {\n                body = response.formData()\n              }\n            }\n          }\n\n          if (response.ok || !throwFailedResponse) {\n            return body\n          } else {\n            return body.then(e => { throw e })\n          }\n        })\n      ))\n    })\n  }\n\n  get(url, query, options) {\n    return this.fetch(url, {\n      method: 'GET',\n      query,\n      ...options\n    })\n  }\n\n  post(url, body, options) {\n    return this.fetch(url, {\n      method: 'POST',\n      body,\n      ...options\n    })\n  }\n\n  put(url, body, options) {\n    return this.fetch(url, {\n      method: 'PUT',\n      body,\n      ...options\n    })\n  }\n\n  patch(url, body, options) {\n    return this.fetch(url, {\n      method: 'PATCH',\n      body,\n      ...options\n    })\n  }\n\n  delete(url, query, options) {\n    return this.fetch(url, {\n      method: 'DELETE',\n      query,\n      ...options\n    })\n  }\n\n  head(url, query, options) {\n    return this.fetch(url, {\n      method: 'HEAD',\n      query,\n      ...options\n    })\n  }\n}\n\nconst instance = Teleman.default = new Teleman()\nTeleman.use = instance.use.bind(instance)\nTeleman.fetch = instance.fetch.bind(instance)\nTeleman.get = instance.get.bind(instance)\nTeleman.post = instance.post.bind(instance)\nTeleman.put = instance.put.bind(instance)\nTeleman.patch = instance.patch.bind(instance)\nTeleman.delete = instance.delete.bind(instance)\nTeleman.head = instance.head.bind(instance)\n\nexport default Teleman\n"],"names":["compose","middleware","Array","isArray","TypeError","fn","context","next","index","dispatch","i","Promise","reject","Error","length","resolve","bind","err","createURLSearchParams","query","constructor","String","URLSearchParams","Object","entries","q","name","value","append","createFormData","data","f","FormData","filename","Teleman","base","headers","readBody","throwFailedResponse","document","baseURI","e","use","beginning","unshift","push","fetch","url","method","params","body","useBefore","useAfter","rest","toUpperCase","URL","replace","_","w","encodeURIComponent","searchParams","h","Headers","set","undefined","includes","contentType","get","startsWith","has","JSON","stringify","ctx","options","href","then","response","responseType","json","text","formData","ok","post","put","patch","delete","head","instance","default"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAMA,cAAc,GAAGA,OAAjB;;;;;;;;;;;EAYA,SAASA,OAAT,CAAkBC,UAAlB,EAA8B;EAC5B,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,UAAd,CAAL,EAAgC,MAAM,IAAIG,SAAJ,CAAc,oCAAd,CAAN;;EAChC,uBAAiBH,UAAjB,kHAA6B;EAAA;;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;;EAAA,QAAlBI,EAAkB;EAC3B,QAAI,OAAOA,EAAP,KAAc,UAAlB,EAA8B,MAAM,IAAID,SAAJ,CAAc,2CAAd,CAAN;EAC/B;;;;;;;;EAQD,SAAO,UAAUE,OAAV,EAAmBC,IAAnB,EAAyB;;EAE9B,QAAIC,KAAK,GAAG,CAAC,CAAb;EACA,WAAOC,QAAQ,CAAC,CAAD,CAAf;;EACA,aAASA,QAAT,CAAmBC,CAAnB,EAAsB;EACpB,UAAIA,CAAC,IAAIF,KAAT,EAAgB,OAAOG,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,8BAAV,CAAf,CAAP;EAChBL,MAAAA,KAAK,GAAGE,CAAR;EACA,UAAIL,EAAE,GAAGJ,UAAU,CAACS,CAAD,CAAnB;EACA,UAAIA,CAAC,KAAKT,UAAU,CAACa,MAArB,EAA6BT,EAAE,GAAGE,IAAL;EAC7B,UAAI,CAACF,EAAL,EAAS,OAAOM,OAAO,CAACI,OAAR,EAAP;;EACT,UAAI;EACF,eAAOJ,OAAO,CAACI,OAAR,CAAgBV,EAAE,CAACC,OAAD,EAAUG,QAAQ,CAACO,IAAT,CAAc,IAAd,EAAoBN,CAAC,GAAG,CAAxB,CAAV,CAAlB,CAAP;EACD,OAFD,CAEE,OAAOO,GAAP,EAAY;EACZ,eAAON,OAAO,CAACC,MAAR,CAAeK,GAAf,CAAP;EACD;EACF;EACF,GAhBD;EAiBD;;EC7CD,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;EACpC,MAAIA,KAAK,CAACC,WAAN,KAAsBC,MAA1B,EAAkC;EAChC,WAAO,IAAIC,eAAJ,CAAoBH,KAApB,CAAP;EACD;;EAED,MAAIA,KAAK,CAACC,WAAN,KAAsBG,MAA1B,EAAkC;EAChCJ,IAAAA,KAAK,GAAGI,MAAM,CAACC,OAAP,CAAeL,KAAf,CAAR;EACD;;EAED,MAAMM,CAAC,GAAG,IAAIH,eAAJ,EAAV;;EAEA,uBAA4BH,KAA5B,kHAAmC;EAAA;;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;;EAAA;EAAA,QAAvBO,IAAuB;EAAA,QAAjBC,KAAiB;EACjC,QAAIA,KAAK,IAAI,IAAb,EAAmBF,CAAC,CAACG,MAAF,CAASF,IAAT,EAAeC,KAAf;EACpB;;EAED,SAAOF,CAAP;EACD;;EAED,SAASI,cAAT,CAAwBC,IAAxB,EAA8B;EAC5B,MAAIA,IAAI,CAACV,WAAL,KAAqBG,MAAzB,EAAiC;EAC/BO,IAAAA,IAAI,GAAGP,MAAM,CAACC,OAAP,CAAeM,IAAf,CAAP;EACD;;EAED,MAAMC,CAAC,GAAG,IAAIC,QAAJ,EAAV;;EAEA,wBAAsCF,IAAtC,yHAA4C;EAAA;;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;;EAAA;EAAA,QAAhCJ,IAAgC;EAAA,QAA1BC,KAA0B;EAAA,QAAnBM,QAAmB;EAC1C,QAAIN,KAAK,IAAI,IAAb,EAAmBI,CAAC,CAACH,MAAF,CAASF,IAAT,EAAeC,KAAf,EAAsBM,QAAtB;EACpB;;EAED,SAAOF,CAAP;EACD;;MAEKG;;;EACJ,0BAAiF;EAAA,mCAAJ,EAAI;EAAA,QAAnEC,IAAmE,SAAnEA,IAAmE;EAAA,QAA7DC,OAA6D,SAA7DA,OAA6D;EAAA,+BAApDC,QAAoD;EAAA,QAApDA,QAAoD,+BAAzC,IAAyC;EAAA,sCAAnCC,mBAAmC;EAAA,QAAnCA,mBAAmC,sCAAb,IAAa;;EAC/E,QAAIH,IAAJ,EAAU;EACR,WAAKA,IAAL,GAAYA,IAAZ;EACD,KAFD,MAEO;EACL,UAAI;EACF;EACA,aAAKA,IAAL,GAAYI,QAAQ,CAACC,OAArB;EACD,OAHD,CAGE,OAAOC,CAAP,EAAU;EAEX;EACF;;EAED,SAAKL,OAAL,GAAeA,OAAf;EACA,SAAKC,QAAL,GAAgBA,QAAhB;EACA,SAAKC,mBAAL,GAA2BA,mBAA3B;EACA,SAAKrC,UAAL,GAAkB,EAAlB;EACD;;;;WAEDyC,MAAA,aAAIzC,UAAJ,EAAgB0C,SAAhB,EAAmC;EAAA,QAAnBA,SAAmB;EAAnBA,MAAAA,SAAmB,GAAP,KAAO;EAAA;;EACjC,QAAIA,SAAJ,EAAe;EACb,WAAK1C,UAAL,CAAgB2C,OAAhB,CAAwB3C,UAAxB;EACD,KAFD,MAEO;EACL,WAAKA,UAAL,CAAgB4C,IAAhB,CAAqB5C,UAArB;EACD;EACF;;WAED6C;;;;;;;;;;MAAA,UAAMC,GAAN,UAaE;EAAA;;EAAA,oCADY,EACZ;EAAA,6BAZAC,MAYA;EAAA,QAZAA,MAYA,6BAZS,KAYT;EAAA,2BAXAb,IAWA;EAAA,QAXAA,IAWA,2BAXO,KAAKA,IAWZ;EAAA,QAVAC,OAUA,SAVAA,OAUA;EAAA,QATAjB,KASA,SATAA,KASA;EAAA,6BARA8B,MAQA;EAAA,QARAA,MAQA,6BARS,EAQT;EAAA,QAPAC,IAOA,SAPAA,IAOA;EAAA,+BANAb,QAMA;EAAA,QANAA,QAMA,+BANW,KAAKA,QAMhB;EAAA,sCALAC,mBAKA;EAAA,QALAA,mBAKA,sCALsB,KAAKA,mBAK3B;EAAA,0BAJAI,GAIA;EAAA,QAJAA,GAIA,0BAJM,KAAKzC,UAIX;EAAA,gCAHAkD,SAGA;EAAA,QAHAA,SAGA,gCAHY,EAGZ;EAAA,+BAFAC,QAEA;EAAA,QAFAA,QAEA,+BAFW,EAEX;EAAA,QADGC,IACH;;EACA,WAAO,IAAI1C,OAAJ,CAAY,UAAAI,OAAO,EAAI;EAC5BiC,MAAAA,MAAM,GAAGA,MAAM,CAACM,WAAP,EAAT;EACAP,MAAAA,GAAG,GAAG,IAAIQ,GAAJ,CAAQR,GAAG,CAACS,OAAJ,CAAY,eAAZ,EAA6B,UAACC,CAAD,EAAIC,CAAJ;EAAA,eAAUC,kBAAkB,CAACV,MAAM,CAACS,CAAD,CAAP,CAA5B;EAAA,OAA7B,CAAR,EAA+EvB,IAA/E,CAAN;;EAEA,UAAIhB,KAAJ,EAAW;EACT,YAAI,EAAEA,KAAK,YAAYG,eAAnB,CAAJ,EAAyC;EACvCH,UAAAA,KAAK,GAAGD,qBAAqB,CAACC,KAAD,CAA7B;EACD;;EAED,8BAA4BA,KAAK,CAACK,OAAN,EAA5B,yHAA6C;EAAA;;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;;EAAA;EAAA,cAAjCE,IAAiC;EAAA,cAA3BC,KAA2B;EAC3CoB,UAAAA,GAAG,CAACa,YAAJ,CAAiBhC,MAAjB,CAAwBF,IAAxB,EAA8BC,KAA9B;EACD;EACF;;EAED,UAAI,KAAI,CAACS,OAAL,IAAgBA,OAApB,EAA6B;EAC3B,YAAMyB,CAAC,GAAG,IAAIC,OAAJ,CAAY,KAAI,CAAC1B,OAAjB,CAAV;;EACA,8BAA4B,IAAI0B,OAAJ,CAAY1B,OAAZ,EAAqBZ,OAArB,EAA5B,yHAA4D;EAAA;;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;;EAAA;EAAA,cAAhDE,IAAgD;EAAA,cAA1CC,KAA0C;EAC1DkC,UAAAA,CAAC,CAACE,GAAF,CAAMrC,IAAN,EAAYC,KAAZ;EACD;;EACDS,QAAAA,OAAO,GAAGyB,CAAV;EACD,OAND,MAMO;EACLzB,QAAAA,OAAO,GAAG,IAAI0B,OAAJ,CAAY,KAAI,CAAC1B,OAAL,IAAgBA,OAAhB,IAA2B,EAAvC,CAAV;EACD;;EAED,UAAIc,IAAI,KAAKc,SAAT,IAAsB,CAAC,CAAC,KAAD,EAAQ,MAAR,EAAgBC,QAAhB,CAAyBjB,MAAzB,CAA3B,EAA6D;EAC3D,YAAMkB,WAAW,GAAG9B,OAAO,CAAC+B,GAAR,CAAY,cAAZ,KAA+B,EAAnD;;EAEA,YAAK,CAACD,WAAD,IAAgBhB,IAAhB,IAAwBA,IAAI,CAAC9B,WAAL,KAAqBG,MAA9C,IAAyD2C,WAAW,CAACE,UAAZ,CAAuB,kBAAvB,CAA7D,EAAyG;EACvG,cAAI,CAAChC,OAAO,CAACiC,GAAR,CAAY,cAAZ,CAAL,EAAkC;EAChCjC,YAAAA,OAAO,CAAC2B,GAAR,CAAY,cAAZ,EAA4B,kBAA5B;EACD;;EAEDb,UAAAA,IAAI,GAAGoB,IAAI,CAACC,SAAL,CAAerB,IAAf,CAAP;EACD,SAND,MAMO,IAAIgB,WAAW,CAACE,UAAZ,CAAuB,qBAAvB,KAAiDlB,IAAjD,IAAyD,EAAEA,IAAI,YAAYlB,QAAlB,CAA7D,EAA0F;EAC/FkB,UAAAA,IAAI,GAAGrB,cAAc,CAACqB,IAAD,CAArB;EACD,SAFM,MAEA,IAAIgB,WAAW,CAACE,UAAZ,CAAuB,mCAAvB,KAA+DlB,IAA/D,IAAuE,EAAEA,IAAI,YAAY5B,eAAlB,CAA3E,EAA+G;EACpH4B,UAAAA,IAAI,GAAGhC,qBAAqB,CAACgC,IAAD,CAA5B;EACD;EACF;;EAED,UAAMsB,GAAG;EACPzB,QAAAA,GAAG,EAAHA,GADO;EAEP0B,QAAAA,OAAO,EAAE;EAAEzB,UAAAA,MAAM,EAANA,MAAF;EAAUZ,UAAAA,OAAO,EAAPA,OAAV;EAAmBc,UAAAA,IAAI,EAAJA;EAAnB,SAFF;EAGPb,QAAAA,QAAQ,EAARA;EAHO,SAIJgB,IAJI,CAAT;;EAOAtC,MAAAA,OAAO,CAACf,UAAO,WAAKmD,SAAL,EAAmBT,GAAnB,EAA2BU,QAA3B,EAAP,CAA6CoB,GAA7C,EAAkD;EAAA,eACxD1B,KAAK,CAAC0B,GAAG,CAACzB,GAAJ,CAAQ2B,IAAT,EAAeF,GAAG,CAACC,OAAnB,CAAL,CAAiCE,IAAjC,CAAsC,UAAAC,QAAQ,EAAI;EAChDJ,UAAAA,GAAG,CAACI,QAAJ,GAAeA,QAAf;EAEA,cAAI1B,IAAI,GAAGvC,OAAO,CAACI,OAAR,EAAX;;EAEA,cAAIsB,QAAQ,IAAI,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,QAAvB,EAAiC,OAAjC,EAA0C4B,QAA1C,CAAmDO,GAAG,CAACC,OAAJ,CAAYzB,MAAZ,CAAmBM,WAAnB,EAAnD,CAAhB,EAAsG;EACpG,gBAAMuB,YAAY,GAAGD,QAAQ,CAACxC,OAAT,CAAiB+B,GAAjB,CAAqB,cAArB,CAArB;;EAEA,gBAAIU,YAAJ,EAAkB;EAChB,kBAAIA,YAAY,CAACT,UAAb,CAAwB,kBAAxB,CAAJ,EAAiD;EAC/ClB,gBAAAA,IAAI,GAAG0B,QAAQ,CAACE,IAAT,EAAP;EACD,eAFD,MAEO,IAAID,YAAY,CAACT,UAAb,CAAwB,OAAxB,CAAJ,EAAsC;EAC3ClB,gBAAAA,IAAI,GAAG0B,QAAQ,CAACG,IAAT,EAAP;EACD,eAFM,MAEA,IAAIF,YAAY,CAACT,UAAb,CAAwB,qBAAxB,CAAJ,EAAoD;EACzDlB,gBAAAA,IAAI,GAAG0B,QAAQ,CAACI,QAAT,EAAP;EACD;EACF;EACF;;EAED,cAAIJ,QAAQ,CAACK,EAAT,IAAe,CAAC3C,mBAApB,EAAyC;EACvC,mBAAOY,IAAP;EACD,WAFD,MAEO;EACL,mBAAOA,IAAI,CAACyB,IAAL,CAAU,UAAAlC,CAAC,EAAI;EAAE,oBAAMA,CAAN;EAAS,aAA1B,CAAP;EACD;EACF,SAxBD,CADwD;EAAA,OAAlD,CAAD,CAAP;EA2BD,KA1EM,CAAP;EA2ED;;WAED0B,MAAA,aAAIpB,GAAJ,EAAS5B,KAAT,EAAgBsD,OAAhB,EAAyB;EACvB,WAAO,KAAK3B,KAAL,CAAWC,GAAX;EACLC,MAAAA,MAAM,EAAE,KADH;EAEL7B,MAAAA,KAAK,EAALA;EAFK,OAGFsD,OAHE,EAAP;EAKD;;WAEDS,OAAA,cAAKnC,GAAL,EAAUG,IAAV,EAAgBuB,OAAhB,EAAyB;EACvB,WAAO,KAAK3B,KAAL,CAAWC,GAAX;EACLC,MAAAA,MAAM,EAAE,MADH;EAELE,MAAAA,IAAI,EAAJA;EAFK,OAGFuB,OAHE,EAAP;EAKD;;WAEDU,MAAA,aAAIpC,GAAJ,EAASG,IAAT,EAAeuB,OAAf,EAAwB;EACtB,WAAO,KAAK3B,KAAL,CAAWC,GAAX;EACLC,MAAAA,MAAM,EAAE,KADH;EAELE,MAAAA,IAAI,EAAJA;EAFK,OAGFuB,OAHE,EAAP;EAKD;;WAEDW,QAAA,eAAMrC,GAAN,EAAWG,IAAX,EAAiBuB,OAAjB,EAA0B;EACxB,WAAO,KAAK3B,KAAL,CAAWC,GAAX;EACLC,MAAAA,MAAM,EAAE,OADH;EAELE,MAAAA,IAAI,EAAJA;EAFK,OAGFuB,OAHE,EAAP;EAKD;;WAEDY,SAAA,iBAAOtC,GAAP,EAAY5B,KAAZ,EAAmBsD,OAAnB,EAA4B;EAC1B,WAAO,KAAK3B,KAAL,CAAWC,GAAX;EACLC,MAAAA,MAAM,EAAE,QADH;EAEL7B,MAAAA,KAAK,EAALA;EAFK,OAGFsD,OAHE,EAAP;EAKD;;WAEDa,OAAA,cAAKvC,GAAL,EAAU5B,KAAV,EAAiBsD,OAAjB,EAA0B;EACxB,WAAO,KAAK3B,KAAL,CAAWC,GAAX;EACLC,MAAAA,MAAM,EAAE,MADH;EAEL7B,MAAAA,KAAK,EAALA;EAFK,OAGFsD,OAHE,EAAP;EAKD;;;;;EAGH,IAAMc,QAAQ,GAAGrD,OAAO,CAACsD,OAAR,GAAkB,IAAItD,OAAJ,EAAnC;EACAA,OAAO,CAACQ,GAAR,GAAc6C,QAAQ,CAAC7C,GAAT,CAAa1B,IAAb,CAAkBuE,QAAlB,CAAd;EACArD,OAAO,CAACY,KAAR,GAAgByC,QAAQ,CAACzC,KAAT,CAAe9B,IAAf,CAAoBuE,QAApB,CAAhB;EACArD,OAAO,CAACiC,GAAR,GAAcoB,QAAQ,CAACpB,GAAT,CAAanD,IAAb,CAAkBuE,QAAlB,CAAd;EACArD,OAAO,CAACgD,IAAR,GAAeK,QAAQ,CAACL,IAAT,CAAclE,IAAd,CAAmBuE,QAAnB,CAAf;EACArD,OAAO,CAACiD,GAAR,GAAcI,QAAQ,CAACJ,GAAT,CAAanE,IAAb,CAAkBuE,QAAlB,CAAd;EACArD,OAAO,CAACkD,KAAR,GAAgBG,QAAQ,CAACH,KAAT,CAAepE,IAAf,CAAoBuE,QAApB,CAAhB;EACArD,OAAO,CAACmD,MAAR,GAAiBE,QAAQ,CAACF,MAAT,CAAgBrE,IAAhB,CAAqBuE,QAArB,CAAjB;EACArD,OAAO,CAACoD,IAAR,GAAeC,QAAQ,CAACD,IAAT,CAActE,IAAd,CAAmBuE,QAAnB,CAAf;;;;;;;;"}