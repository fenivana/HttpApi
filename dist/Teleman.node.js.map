{"version":3,"file":"Teleman.node.js","sources":["../src/index.js"],"sourcesContent":["class Teleman {\n  constructor({ base = '', requestOptions = {}, beforeCreateRequest, complete, error } = {}) {\n    this.base = base\n    this.requestOptions = requestOptions\n    this.beforeCreateRequest = beforeCreateRequest\n    this.complete = complete\n    this.error = error\n  }\n\n  fetch(url, { method = 'GET', headers, query, body, type } = {}) {\n    if (this.base) url = this.base + url\n    method = method.toUpperCase()\n\n    if (query) {\n      url = new URL(url)\n\n      if (!(query instanceof URLSearchParams)) {\n        // filter null/undefined\n        if (query.constructor === Object) {\n          query = Object.entries(query)\n        }\n\n        if (query instanceof Array) {\n          const q = new URLSearchParams()\n          query.forEach(([name, value]) => {\n            if (value != null) q.append(name, value)\n          })\n          query = q\n        } else if (query.constructor === String) {\n          query = new URLSearchParams(query)\n        }\n      }\n\n      for (const [name, value] of query.entries()) {\n        url.searchParams.append(name, value)\n      }\n\n      url = url.href\n    }\n\n    if (this.requestOptions.headers && headers) {\n      const h = new Headers(this.requestOptions.headers)\n      for (const [name, value] of new Headers(headers).entries()) {\n        h.set(name, value)\n      }\n      headers = h\n    } else {\n      headers = new Headers(this.requestOptions.headers || headers || undefined)\n    }\n\n    if (['POST', 'PUT', 'PATCH'].includes(method)) {\n      if (type === 'json' || !type && body && body.constructor === Object) {\n        if (!headers.has('Content-Type')) {\n          headers.set('Content-Type', 'application/json')\n        }\n\n        body = JSON.stringify(body)\n      } else if (type === 'form' && !(body instanceof FormData)) {\n        const form = new FormData()\n\n        for (const k in body) {\n          form.append(k, body[k])\n        }\n\n        body = form\n      }\n    }\n\n    let options = { ...this.requestOptions, method, headers, body }\n\n    if (this.beforeCreateRequest) {\n      const modified = this.beforeCreateRequest(url, options)\n      if (modified && modified.url && modified.options) {\n        ({ url, options } = modified)\n      }\n    }\n\n    const request = new Request(url, options)\n\n    return fetch(request).then(response => {\n      let body\n\n      if (['GET', 'POST', 'PUT', 'DELETE', 'PATCH'].includes(method)) {\n        const contentType = response.headers.get('Content-Type')\n        if (contentType) {\n          if (contentType.startsWith('application/json')) {\n            body = response.json()\n          } else if (contentType.startsWith('text/')) {\n            body = response.text()\n          }\n        }\n      }\n\n      // if complete handler is given, you should check response.ok yourself in the handler\n      if (this.complete) {\n        return body\n          ? body.then(body => this.complete({ request, response, body }))\n          : this.complete({ request, response, body })\n      } else if (response.ok) {\n        return body || response\n      } else {\n        throw body || response\n      }\n    }, error => {\n      if (this.error) this.error({ request, error })\n      else throw error\n    })\n  }\n\n  get(url, query, options) {\n    return this.fetch(url, {\n      method: 'GET',\n      query,\n      ...options\n    })\n  }\n\n  post(url, body, options) {\n    return this.fetch(url, {\n      method: 'POST',\n      body,\n      ...options\n    })\n  }\n\n  put(url, body, options) {\n    return this.fetch(url, {\n      method: 'PUT',\n      body,\n      ...options\n    })\n  }\n\n  patch(url, body, options) {\n    return this.fetch(url, {\n      method: 'PATCH',\n      body,\n      ...options\n    })\n  }\n\n  delete(url, query, options) {\n    return this.fetch(url, {\n      method: 'DELETE',\n      query,\n      ...options\n    })\n  }\n\n  head(url, query, options) {\n    return this.fetch(url, {\n      method: 'HEAD',\n      query,\n      ...options\n    })\n  }\n}\n\nexport default Teleman\n"],"names":[],"mappings":"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"}